'use strict';

// Три большие библеотеки. 
// Angular, React, Vue

// Angular - это фреймворк, а не библиотека. При его использовании практически невозможно уклонятся от его структуры и весь код будет написан определенным образом.
// Из-за этого будет несколько ограничен функционал по выбору формирования приложения.

// React и Vue - подключаемые библиотеки, которые можно использовать в любой части приложение, т.е даже на небольших участках кода.

// есть ещё Axios - для запросов на сервер
// Это участок кода, который кто-то записал за нас и мы его используем.

// Обычный нативный JS. До этого мы работали с классическим интерактивом на веб сайтах

// Благодаря фреймовркам мы можем создавать готовые приложения, которые будут работать внутри браузера. - single page application ( SPA )


// Angular - JS фреймворк основанный на TypeScipt. Можно писать на чистом JS, а потом компилятор переведет всё в TypeScript
// Самый тяжелый ( по весу ). Может работать немного медленнее. Порок вхождения - самый высокий. 
// Разработчик - Google

// Чтобы пользоваться Angular .

// node.js - нужно установить
// TypeScript - понимать как работает
// WebPack - использует Angular. Понимать как работает
// MVC паттерн - шаблон проектирования для создания проекта.
// Angular .    www.angular.io



// Чтобы пользоваться React.
// разработчик - FaceBook

// node.js
// JSX - препроцессор
// Babel - переводит новый стандарт JS в старый.
// Webpack
// React



// Чтобы пользоваться Vue JS
// самый молодой. Довольно прост в обучении

// node.js
// Нативный JS
// WebPack
// Vue


// Библиотека Jquery 
// Самая простая и старая. И скорее всего самая первая библиотека начинающего верстальщика.
// Изучается за 2-3 дня.
// довольно популярна
// ОБЯЗАТЕЛЬНО ИМЕТЬ ЗНАНИЕ О НЕЙ.